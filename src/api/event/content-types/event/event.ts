// Interface automatically generated by schemas-to-ts

import { Band } from '../../../band/content-types/band/band';
import { Location } from '../../../location/content-types/location/location';
import { Ticket } from '../../../../components/ticket/interfaces/Ticket';
import { Media } from '../../../../common/schemas-to-ts/Media';
import { Band_Plain } from '../../../band/content-types/band/band';
import { Location_Plain } from '../../../location/content-types/location/location';
import { Ticket_Plain } from '../../../../components/ticket/interfaces/Ticket';
import { Media_Plain } from '../../../../common/schemas-to-ts/Media';
import { Ticket_NoRelations } from '../../../../components/ticket/interfaces/Ticket';
import { AdminPanelRelationPropertyModification } from '../../../../common/schemas-to-ts/AdminPanelRelationPropertyModification';

export enum Type {
  Concert = 'Concert',
  Konzert = 'Konzert',
  Festival = 'Festival',
  Kufa = 'Kufa',
  Treff = 'Treff',
  Andere = 'Andere',}

export interface Event {
  id: number;
  attributes: {
    createdAt: Date;    updatedAt: Date;    publishedAt?: Date;    name: string;
    type: Type;
    eventtext?: string;
    eventstart: Date;
    eventend?: Date;
    bands?: { data: Band[] };
    location?: { data: Location };
    ticket: Ticket;
    creator?: string;
    flyer?: { data: Media };
  };
}
export interface Event_Plain {
  id: number;
  createdAt: Date;  updatedAt: Date;  publishedAt?: Date;  name: string;
  type: Type;
  eventtext?: string;
  eventstart: Date;
  eventend?: Date;
  bands?: Band_Plain[];
  location?: Location_Plain;
  ticket: Ticket_Plain;
  creator?: string;
  flyer?: Media_Plain;
}

export interface Event_NoRelations {
  id: number;
  createdAt: Date;  updatedAt: Date;  publishedAt?: Date;  name: string;
  type: Type;
  eventtext?: string;
  eventstart: Date;
  eventend?: Date;
  bands?: number[];
  location?: number;
  ticket: Ticket_NoRelations;
  creator?: string;
  flyer?: number;
}

export interface Event_AdminPanelLifeCycle {
  id: number;
  createdAt: Date;  updatedAt: Date;  publishedAt?: Date;  name: string;
  type: Type;
  eventtext?: string;
  eventstart: Date;
  eventend?: Date;
  bands?: AdminPanelRelationPropertyModification<Band_Plain>;
  location?: AdminPanelRelationPropertyModification<Location_Plain>;
  ticket: Ticket_Plain;
  creator?: string;
  flyer?: AdminPanelRelationPropertyModification<Media_Plain>;
}
